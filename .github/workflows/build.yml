name: build-tsschecker

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - msystem: mingw64
            arch: x86_64

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        release: false
        update: false
        install: >-
          base-devel
          git
          mingw-w64-${{ matrix.arch }}-gcc
          make
          libtool
          autoconf
          automake-wrapper
          mingw-w64-${{ matrix.arch }}-libzip
          mingw-w64-${{ matrix.arch }}-openssl
          mingw-w64-${{ matrix.arch }}-curl
          mingw-w64-${{ matrix.arch }}-pkgconf

    - uses: actions/checkout@v4

    - name: prepare environment
      run: |
        echo "target_triplet=`gcc -dumpmachine`" >> $GITHUB_ENV
        git config --global core.autocrlf false

    # Clone and build libfragmentzip
    - name: build libfragmentzip
      run: |
        git clone https://github.com/tihmstar/libfragmentzip.git
        cd libfragmentzip
        ./autogen.sh CC=gcc CXX=g++ --enable-debug
        make -j
        make install

    - name: build tsschecker
      run: |
        git clone --depth=1 --recursive https://github.com/tihmstar/tsschecker.git
        cd tsschecker
        ./autogen.sh CC=gcc CXX=g++ --enable-debug
        make -j

    - name: prepare release
      run: |
        mkdir -p rel
        cp -v ./tsschecker.exe rel/
        tar -C rel -cJvf tsschecker-latest_${{ matrix.arch }}-${{ matrix.msystem }}.tar.xz .

    - name: publish release
      env:
        github_token: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG="${GITHUB_REF##*/}-${GITHUB_SHA:0:7}"
        gh release create "$TAG" --draft --title "Draft Release"
        gh release upload "$TAG" tsschecker-latest_${{ matrix.arch }}-${{ matrix.msystem }}.tar.xz
